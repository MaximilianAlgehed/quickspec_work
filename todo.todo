-- Todo for the introduction of conditionals in QuickSpec --
    
    ~What is the connection between schemas and TE?

    ~Work out how to use the lazy feat list to generate the list and
    ~use sized to select oneof the first n elements in this list as the arbitrary
    ~instance in stead of using the template haskell stuff

    ~Make APL functions like ⍳ crash on functions where the dimension is not right

    ~Work out a nice way to work with well-formedness of expression in the APL stuff

    ~Prove that every expression that can be formed in TE can be reduced to a conditional

    ~Prove that not every expression formed in FE can be reduced to a conditional

    ~Pester Nick about the crashes in the twee branch

    ~Measure run time and memory consumption of FE, TE, and CE

    ~Integrate conjunction in TE into the template haskell implementation of TE

    ~Investigate the merits of transformation types

    ~Do the mathematics for the efficiency of the three approaches

    ~Do the mathematics for the uniformity (soundness) of the three approaches 

    ~Integrate the template haskell stuff into quickspeck

    ~Argue why expressions with transforms are only interesting when they are on the form "P(f(x)) => ... x ..."
